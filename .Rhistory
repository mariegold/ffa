> m2 <- c(1,2,4,5,7,6,8,3)
> cor.test(m1, m2, method = "kendall")
m1 <- c(2,1,3,5,4,8,7,6)
m2 <- c(1,2,4,5,7,6,8,3)
cor.test(m1, m2, method = "kendall")
c <- cor.test(m1, m2, method = "kendall")
c$parameter
c$p.value
m1 <- c(2,1,3,5,4,8,7,9)
m2 <- c(1,2,4,5,7,6,8,3,9)
cor.test(m1, m2, method = "kendall")
D.A <- c(1.96,2.24,1.71,2.41,1.62,1.93)
D.B <- c(2.11,2.43,2.07,2.71,2.50,2.84,2.88)
qqnorm(D.A); qqline(D.A)
qqnorm(D.B); qqline(D.B)
qqnorm(D.A); qqline(D.A)
qqnorm(D.B); qqline(D.B)
?dpois
dpois(60,68.67)*dpois(5,7.33)
optimisation()
FLtools::optimisation()
remotes::install_bitbucket("finnlindgren/FLtools", dep = TRUE)
install.packages('remotes')
remotes::install_bitbucket("finnlindgren/FLtools", dep = TRUE)
FLtools::optimisation()
library(devtools)
install_github("NVE/fitdistrib")
install_github("NVE/FlomKart")
remove.packages("RNetCDF")
install_github("NVE/FlomKart")
install.packages("RNetCDF")
install.packages("RNetCDF")
R.version.string
library(devtools)
install.packages("devtools")
install_github("NVE/fitdistrib")
install_github("NVE/fitdistrib")
library(devtools)
install_github("NVE/fitdistrib")
install_github("NVE/FlomKart")
install.packages('RNetCDF')
install.packages("NVE/FlomKart",type="source",repos=c("https://github.com/NVE/FlomKart", "http://cran.rstudio.com"))
library(devtools)
install_github("NVE/fitdistrib")
install_github("NVE/FlomKart")
var(c(0.9,0.8,0.75,1.0))
library(genderizeR)
install.packages('genderizeR')
library(genderizeR)
library(genderizeR)
install.packages('genderizeR')
install.packages('devtools')
install_github("kalimu/genderizeR")
library(devtools)
install_github("kalimu/genderizeR")
genderizeAPI(c("Jan"),
country = "CZ")
library(genderizeR)
genderizeAPI(c("Jan"),
country = "CZ")
genderizeAPI(c("Jan"),
country = "US")
genderizeAPI(c("Kim"),
country = "US")
genderizeAPI(c("Kim"), country = "US")
genderizeAPI(c("Kim"), country = "KR")
shiny::runApp('Desktop/Maths Project/code')
runApp('Desktop/Maths Project/code')
?pweibull3
?pgumbel
x=aps
ad.test(x, null = "pgumbel", loc=params[1], scale=params[2])$statistic
method="mle"
params <-  eevd(x, method = method)$parameter
ad.test(x, null = "pgumbel", loc=params[1], scale=params[2])$statistic
runApp('Desktop/Maths Project/code')
runApp('Desktop/Maths Project/code')
deployApp()
library(rsconnect)
deployApp()
setwd("~/Desktop/Maths Project/code")
deployApp()
runApp()
runApp()
runApp()
# -------------------------------------------------------------------------------------------
# IMPORT & PROCESS DATA
# -------------------------------------------------------------------------------------------
# read in data
data <- read_excel('data/USGS02489500.xls', sheet = 1)
#attach(data)
# sort by date and convert to dataframe
data_processed <- data.frame(data[order(data$DecYear),])
colnames(data_processed)[2] <- "aps"
# remove period prior to 1900 (not enough data)
data_processed <- data_processed[data_processed$Year > 1899,]
# drop minimum value in years with multiple values
data_processed <- sqldf("select Year, max(aps) as aps from data_processed group by Year")
#-----------------------------------------------------------------------
# IQR method
q <- quantile(data_processed$aps)
iqr <- q[4]-q[2]
upr <- q[4] + 3*iqr
lwr <- q[2] - 3*iqr
data_cleaned <- data_processed[(data_processed$aps < upr) & (data_processed$aps > lwr),]
#-----------------------------------------------------------------------
# # Standard deviation method: expect 99.7% of data to fall within this range
# upr <- mean(data_processed$aps) + 3*sd(data_processed$aps)
# lwr <- mean(data_processed$aps) - 3*sd(data_processed$aps)
# data_cleaned <- data_processed[(data_processed$aps < upr) & (data_processed$aps > lwr),]
#-----------------------------------------------------------------------
# rank observations in decreasing order
data_ranked <- data_cleaned[order(data_cleaned$aps, decreasing = TRUE),]
data_ranked["rank"] <- seq(1,dim(data_cleaned)[1])
data_ranked <- data_ranked[order(data_ranked$Year),]
# order by rank
data_sorted <- data_ranked[order(data_ranked$rank),]
list("aps" = data_ranked$aps, "ranked" = data_ranked, "sorted" = data_sorted, "processed" = data_processed)
p3(log(aps))
p3(log(aps), method="pwme")
pearson_Lmom(log(aps))$estimate
x=log(aps)
params <- pearson_Lmom(x)$estimate
location <- params[1]; scale <- params[2]; shape <- params[3]
z <- qnorm(1-(1/rp))
return_periods <- (dim(data_sorted)[1]+1)/data_sorted$rank    # Weibull plotting position
rp=return_periods
z <- qnorm(1-(1/rp))
z
k <- skew(x)/6
kt <- z+(z^2-1)*k + (1/3)*(z^3-6*z)*k^2-(z^2-1)*k^3+z*k^4+(1/3)*k^5
xt <- location + shape*scale + kt*sqrt(shape*(scale)^2)
xt
exp(xt)
ks.test(x, exp(xt))
x
ks.test(x, xt
)
runApp()
runApp()
shiny::runApp()
runApp()
Bogalusa = "USGS02489500"
data <- read_excel(paste0("data/", Jackson, ".xls"), sheet = 1)
Jackson = "USGS02486000"
Edinburg = "USGS02482000"
Carthage = "USGS02482550"
Lena = "USGS02483500"
Rockport = "USGS02488000"
Monticello = "USGS02488500"
Columbia = "USGS02489000"
Bogalusa = "USGS02489500"
data <- read_excel(paste0("data/", Jackson, ".xls"), sheet = 1)
source('fitting.R')
out <- preprocessing(data)
data_processed <<- out$processed
out <- preprocessing(data)
data_processed <- out$processed
data_sorted <- out$sorted
aps <<- out$aps
return_periods <- (dim(data_sorted)[1]+1)/data_sorted$rank
distr <- "norm"
methond <- "mle"
if (distr == "norm") {
estim <- normal(aps, method, log = FALSE, rp = return_periods, plotx = xseq)
}
method <- "mle"
if (distr == "norm") {
estim <- normal(aps, method, log = FALSE, rp = return_periods, plotx = xseq)
}
if (distr == "lognorm") {
estim <- normal(log(aps), method, log = TRUE, rp = return_periods, plotx = xseq)
}
if (distr == "expo") {
estim <- exponential(aps, rp = return_periods, plotx = xseq)
}
if (distr == "gam") {
estim <- gam(aps, method, rp = return_periods, plotx = xseq)
}
if (distr == "p3") {
estim <- p3(aps, method, rp = return_periods, plotx = xseq)
}
if (distr == "lp3") {
estim <- p3(log(aps), method, rp = return_periods, log=TRUE)
estim$xt <- exp(estim$xt)
if (method == "mle") {
estim$likelihood <- lp3(log(aps), method)$likelihood
}
}
if (distr == "gum") {
estim <- gumb(aps, method, rp = return_periods, plotx = xseq)
}
if (distr == "wei") {
estim <- weibull(aps, method, rp = return_periods, plotx = xseq)
}
fit <- function(distr, method) {
if (distr == "norm") {
estim <- normal(aps, method, log = FALSE, rp = return_periods, plotx = xseq)
}
if (distr == "lognorm") {
estim <- normal(log(aps), method, log = TRUE, rp = return_periods, plotx = xseq)
}
if (distr == "expo") {
estim <- exponential(aps, rp = return_periods, plotx = xseq)
}
if (distr == "gam") {
estim <- gam(aps, method, rp = return_periods, plotx = xseq)
}
if (distr == "p3") {
estim <- p3(aps, method, rp = return_periods, plotx = xseq)
}
if (distr == "lp3") {
estim <- p3(log(aps), method, rp = return_periods, log=TRUE)
estim$xt <- exp(estim$xt)
if (method == "mle") {
estim$likelihood <- lp3(log(aps), method)$likelihood
}
}
if (distr == "gum") {
estim <- gumb(aps, method, rp = return_periods, plotx = xseq)
}
if (distr == "wei") {
estim <- weibull(aps, method, rp = return_periods, plotx = xseq)
}
estim
}
fit(distr, method)
fit(distr, method)$params
runApp()
runApp()
fit(distr, method)
fit(distr, method)$par
fit("norm", "mle")$par
fit("norm", "mme")$par
fit("norm", "pwme")$par
fit("lnorm", "pwme")$par
fit("lognorm", "pwme")$par
fit("lognorm", "mme")$par
fit("lp3", "pwme")$par
fit("lp3", "mme")$par
fit("lp3", "mle")$par
fit("p3", "mle")$par
fit("p3", "mme")$par
fit("p3", "pwme")$par
runApp()
pearson_mle(aps)
pearson_mle(aps)$se
egamma(x, method = "mle")
egamma(aps, method = "mle")
fitdist(aps, "gamma", "mle", start=list(shape=0.5, scale=0.5)
)
)?fitdistr()
?fitdistr
fitdistr(aps, "gamma")
fitdistr(aps, "gamma", start=list(scale = 10, shape=1))
fitdistr(aps, "gamma", start=list(scale = 4, shape=5000))
fitdistr(aps, "gamma", start=list(scale = 5000, shape=4))
fitdistr(aps, "gamma", start=list(scale = 1000, shape=1.5))
fitdistr(aps, "gamma", start=list(scale = 10, shape=1.5))
fitdistr(aps, "gamma", start=list(scale = 10, shape=1.5))$shape
fitdistr(aps, "gamma", start=list(scale = 10, shape=1.5))$estimate
fitdistr(aps, "gamma", start=list(scale = 10, shape=1.5))$estimate[1]
fitdistr(aps, "gamma", start=list(scale = 10, shape=1.5))$sd
gamma_Lmom(aps)
gamma_Lmom(aps)$sd
gamma_Lmom(aps)$estimate
gamma_Lmom(aps)$se
gamma_Lmom(aps)$sd
?egamma
hist(aps, breaks=15, main = "Distribution of annual peak discharge", xlab = "Annual peak streamflow (cf/s)", prob = TRUE)
lines(density(aps), col = "blue", lwd = 2)
plot(log(return_periods), data_sorted$aps, xlab = "Log return period", ylab = "Discharge (cfs)",
main = "Estimated peak discharge vs log return period")
lines(log(return_periods), estim$xt, col=2)
runApp()
plot(log(return_periods), data_sorted$aps, xlab = "Log return period", ylab = "Discharge (cfs)",
main = "Estimated peak discharge vs log return period")
fit("norm", "pwme")
lines(log(return_periods), estim$xt, col=2)
fit("lognorm", "pwme")
lines(log(return_periods), estim$xt, col=3)
lines(log(return_periods), estim$xt, col=3, lty=2)
fit("norm", "pwme")
lines(log(return_periods), estim$xt, col=2)
fit("lognorm", "pwme")
lines(log(return_periods), estim$xt, col=3, lty=2)
lines(log(return_periods), estim$xt, col=2, lwd=2)
fit("lognorm", "pwme")
lines(log(return_periods), estim$xt, col=3, lty=2, lwd=2)
fit("exp", "mle")
lines(log(return_periods), estim$xt, col=4, lty=2, lwd=2)
plot(log(return_periods), data_sorted$aps, xlab = "Log return period", ylab = "Discharge (cfs)",
main = "Estimated peak discharge vs log return period")
estim <- fit("norm", "pwme")
lines(log(return_periods), estim$xt, col=2, lwd=2)
estim <- fit("lognorm", "pwme")
lines(log(return_periods), estim$xt, col=3, lty=2, lwd=2)
estim <- fit("lognorm", "pwme")
lines(log(return_periods), estim$xt, col=3, lwd=2)
estim <- fit("exp", "mle")
lines(log(return_periods), estim$xt, col=4, lwd=2)
estim <- fit("exp", "mle")
lines(log(return_periods), estim$xt, col=4, lwd=2)
estim <- fit("expo", "mle")
lines(log(return_periods), estim$xt, col=4, lwd=2)
plot(log(return_periods), data_sorted$aps, xlab = "Log return period", ylab = "Discharge (cfs)",
main = "Estimated peak discharge vs log return period")
estim <- fit("norm", "pwme")
lines(log(return_periods), estim$xt, col=2, lwd=2)
estim <- fit("lognorm", "pwme")
lines(log(return_periods), estim$xt, col=3, lwd=2)
estim <- fit("expo", "mle")
lines(log(return_periods), estim$xt, col=4, lwd=2)
estim <- fit("gamma", "mle")
lines(log(return_periods), estim$xt, col=5, lwd=2)
estim <- fit("gam", "mle")
lines(log(return_periods), estim$xt, col=5, lwd=2)
estim <- fit("p3", "mle")
lines(log(return_periods), estim$xt, col=6, lwd=2)
runApp()
plot(log(return_periods), data_sorted$aps, xlab = "Log return period", ylab = "Discharge (cfs)",
main = "Estimated peak discharge vs log return period")
estim <- fit("norm", "pwme")
lines(log(return_periods), estim$xt, col=2, lwd=2)
estim <- fit("lognorm", "pwme")
lines(log(return_periods), estim$xt, col=3, lwd=2)
estim <- fit("expo", "mle")
lines(log(return_periods), estim$xt, col=4, lwd=2)
estim <- fit("gam", "mle")
lines(log(return_periods), estim$xt, col=5, lwd=2)
estim <- fit("p3", "mle")
lines(log(return_periods), estim$xt, col=6, lwd=2)
estim <- fit("lp3", "mle")
lines(log(return_periods), estim$xt, col=7, lwd=2)
estim <- fit("gum", "mme")
lines(log(return_periods), estim$xt, col=8, lwd=2)
estim <- fit("wei", "pwme")
lines(log(return_periods), estim$xt, col=9, lwd=2)
plot(log(return_periods), data_sorted$aps, xlab = "Log return period", ylab = "Discharge (cfs)",
main = "Estimated peak discharge vs log return period")
estim <- fit("norm", "pwme")
lines(log(return_periods), estim$xt, col=2, lwd=2)
estim <- fit("lognorm", "pwme")
lines(log(return_periods), estim$xt, col=3, lwd=2)
legend("Normal","Log-normal", "Exponential", "Gamma", "Pearson III", "Log-Pearson III", "Gumbel", "Weibull")
?legend
plot(log(return_periods), data_sorted$aps, xlab = "Log return period", ylab = "Discharge (cfs)",
main = "Estimated peak discharge vs log return period")
estim <- fit("norm", "pwme")
lines(log(return_periods), estim$xt, col=2, lwd=2)
estim <- fit("lognorm", "pwme")
lines(log(return_periods), estim$xt, col=3, lwd=2)
estim <- fit("expo", "mle")
lines(log(return_periods), estim$xt, col=4, lwd=2)
estim <- fit("gam", "mle")
lines(log(return_periods), estim$xt, col=5, lwd=2)
estim <- fit("p3", "mle")
lines(log(return_periods), estim$xt, col=6, lwd=2)
estim <- fit("lp3", "mle")
lines(log(return_periods), estim$xt, col=7, lwd=2)
estim <- fit("gum", "mme")
lines(log(return_periods), estim$xt, col=8, lwd=2)
estim <- fit("wei", "pwme")
lines(log(return_periods), estim$xt, col=9, lwd=2)
legend("bottomright", c("Normal","Log-normal", "Exponential", "Gamma", "Pearson III", "Log-Pearson III", "Gumbel", "Weibull"))
legend("bottomright", col = c(2,3,4,5,6,7,8,9), c("Normal","Log-normal", "Exponential", "Gamma", "Pearson III", "Log-Pearson III", "Gumbel", "Weibull"))
legend("bottomright", col = c(2,3,4,5,6,7,8,9), c("Normal","Log-normal", "Exponential", "Gamma", "Pearson III", "Log-Pearson III", "Gumbel", "Weibull"))
legend("bottomright", col = c(2,3,4,5,6,7,8,9), lty = rep(1,8), c("Normal","Log-normal", "Exponential", "Gamma", "Pearson III", "Log-Pearson III", "Gumbel", "Weibull"))
plot(log(return_periods), data_sorted$aps, xlab = "Log return period", ylab = "Discharge (cfs)",
main = "Estimated peak discharge vs log return period")
estim <- fit("norm", "pwme")
lines(log(return_periods), estim$xt, lty=2, lwd=2)
estim <- fit("lognorm", "pwme")
lines(log(return_periods), estim$xt, lty=3, lwd=2)
estim <- fit("expo", "mle")
lines(log(return_periods), estim$xt, lty=4, lwd=2)
estim <- fit("gam", "mle")
lines(log(return_periods), estim$xt, lty=5, lwd=2)
estim <- fit("p3", "mle")
lines(log(return_periods), estim$xt, lty=6, lwd=2)
estim <- fit("lp3", "mle")
lines(log(return_periods), estim$xt, lty=7, lwd=2)
estim <- fit("gum", "mme")
lines(log(return_periods), estim$xt, lty=8, lwd=2)
estim <- fit("wei", "pwme")
lines(log(return_periods), estim$xt, lty=9, lwd=2)
legend("bottomright", col = c(2,3,4,5,6,7,8,9), lty = rep(1,8), c("Normal","Log-normal", "Exponential", "Gamma", "Pearson III", "Log-Pearson III", "Gumbel", "Weibull"))
plot(log(return_periods), data_sorted$aps, xlab = "Log return period", ylab = "Discharge (cfs)",
main = "Estimated peak discharge vs log return period")
estim <- fit("norm", "pwme")
lines(log(return_periods), estim$xt, lty=2, lwd=2)
estim <- fit("lognorm", "pwme")
lines(log(return_periods), estim$xt, lty=3, lwd=2)
estim <- fit("expo", "mle")
lines(log(return_periods), estim$xt, lty=4, lwd=2)
estim <- fit("gam", "mle")
lines(log(return_periods), estim$xt, lty=5, lwd=2)
estim <- fit("p3", "mle")
lines(log(return_periods), estim$xt, lty=6, lwd=2)
estim <- fit("lp3", "mle")
lines(log(return_periods), estim$xt, lty=7, lwd=2)
estim <- fit("gum", "mme")
lines(log(return_periods), estim$xt, lty=8, lwd=2)
estim <- fit("wei", "pwme")
lines(log(return_periods), estim$xt, lty=9, lwd=2)
legend("bottomright", lty = c(2,3,4,5,6,7,8,9), c("Normal","Log-normal", "Exponential", "Gamma", "Pearson III", "Log-Pearson III", "Gumbel", "Weibull"))
lines(log(return_periods), estim$xt, lty=10, lwd=2)
plot(log(return_periods), data_sorted$aps, xlab = "Log return period", ylab = "Discharge (cfs)",
main = "Estimated peak discharge vs log return period")
estim <- fit("norm", "pwme")
lines(log(return_periods), estim$xt, lty=2, lwd=2)
estim <- fit("lognorm", "pwme")
lines(log(return_periods), estim$xt, lty=3, lwd=2)
estim <- fit("expo", "mle")
lines(log(return_periods), estim$xt, lty=4, lwd=2)
estim <- fit("gam", "mle")
lines(log(return_periods), estim$xt, lty=5, lwd=2)
estim <- fit("p3", "mle")
lines(log(return_periods), estim$xt, lty=6, lwd=2)
estim <- fit("lp3", "mle")
lines(log(return_periods), estim$xt, lty=7, lwd=2)
estim <- fit("gum", "mme")
lines(log(return_periods), estim$xt, lty=8, lwd=2)
estim <- fit("wei", "pwme")
lines(log(return_periods), estim$xt, lty=10, lwd=2)
legend("bottomright", lty = c(2,3,4,5,6,7,8,9), c("Normal","Log-normal", "Exponential", "Gamma", "Pearson III", "Log-Pearson III", "Gumbel", "Weibull"))
legend("bottomright", lty = c(2,3,4,5,6,7,8,10), c("Normal","Log-normal", "Exponential", "Gamma", "Pearson III", "Log-Pearson III", "Gumbel", "Weibull"))
plot(log(return_periods), data_sorted$aps, xlab = "Log return period", ylab = "Discharge (cfs)",
main = "Estimated peak discharge vs log return period")
estim <- fit("norm", "pwme")
lines(log(return_periods), estim$xt, lty=2, lwd=2)
estim <- fit("lognorm", "pwme")
lines(log(return_periods), estim$xt, lty=3, lwd=2)
estim <- fit("expo", "mle")
lines(log(return_periods), estim$xt, lty=4, lwd=2)
estim <- fit("gam", "mle")
lines(log(return_periods), estim$xt, lty=5, lwd=2)
estim <- fit("p3", "mle")
lines(log(return_periods), estim$xt, lty=6, lwd=2)
estim <- fit("lp3", "mle")
lines(log(return_periods), estim$xt, lty=7, lwd=2)
estim <- fit("gum", "mme")
lines(log(return_periods), estim$xt, lty=8, lwd=2)
estim <- fit("wei", "pwme")
lines(log(return_periods), estim$xt, lty=11, lwd=2)
legend("bottomright", lty = c(2,3,4,5,6,7,8,11), c("Normal","Log-normal", "Exponential", "Gamma", "Pearson III", "Log-Pearson III", "Gumbel", "Weibull"))
legend("bottomright", col = c(2,3,4,5,6,7,8,9), lty = rep(1,8), c("Normal","Log-normal", "Exponential", "Gamma", "Pearson III", "Log-Pearson III", "Gumbel", "Weibull"))
plot(log(return_periods), data_sorted$aps, xlab = "Log return period", ylab = "Discharge (cfs)",
main = "Estimated peak discharge vs log return period")
estim <- fit("norm", "pwme")
lines(log(return_periods), estim$xt, col=2, lwd=2)
estim <- fit("lognorm", "pwme")
lines(log(return_periods), estim$xt, col=3, lwd=2)
estim <- fit("expo", "mle")
lines(log(return_periods), estim$xt, col=7, lwd=2)
estim <- fit("gam", "mle")
lines(log(return_periods), estim$xt, col=5, lwd=2)
estim <- fit("p3", "mle")
lines(log(return_periods), estim$xt, col=6, lwd=2)
estim <- fit("lp3", "mle")
lines(log(return_periods), estim$xt, col=4, lwd=2)
estim <- fit("gum", "mme")
lines(log(return_periods), estim$xt, col=8, lwd=2)
estim <- fit("wei", "pwme")
lines(log(return_periods), estim$xt, col=9, lwd=2)
legend("bottomright", col = c(2,3,7,5,6,4,8,9), lty = rep(1,8), c("Normal","Log-normal", "Exponential", "Gamma", "Pearson III", "Log-Pearson III", "Gumbel", "Weibull"))
lines(log(return_periods), estim$xt, col=10, lwd=2)
estim <- fit("gam", "mle")
lines(log(return_periods), estim$xt, col=10, lwd=2)
estim <- fit("expo", "mle")
lines(log(return_periods), estim$xt, col=10, lwd=2)
plot(log(return_periods), data_sorted$aps, xlab = "Log return period", ylab = "Discharge (cfs)",
main = "Estimated peak discharge vs log return period")
estim <- fit("norm", "pwme")
lines(log(return_periods), estim$xt, col=2, lwd=2)
estim <- fit("lognorm", "pwme")
lines(log(return_periods), estim$xt, col=3, lwd=2)
estim <- fit("expo", "mle")
lines(log(return_periods), estim$xt, col=10, lwd=2)
estim <- fit("gam", "mle")
lines(log(return_periods), estim$xt, col=5, lwd=2)
estim <- fit("p3", "mle")
lines(log(return_periods), estim$xt, col=6, lwd=2)
estim <- fit("lp3", "mle")
lines(log(return_periods), estim$xt, col=4, lwd=2)
estim <- fit("gum", "mme")
lines(log(return_periods), estim$xt, col=8, lwd=2)
estim <- fit("wei", "pwme")
lines(log(return_periods), estim$xt, col=9, lwd=2)
legend("bottomright", col = c(2,3,10,5,6,4,8,9), lty = rep(1,8), c("Normal","Log-normal", "Exponential", "Gamma", "Pearson III", "Log-Pearson III", "Gumbel", "Weibull"))
lines(log(return_periods), estim$xt, col=11, lwd=2)
lines(log(return_periods), estim$xt, col="orange", lwd=2)
legend("bottomright", col = c(2,3,"orange",5,6,4,8,9), lty = rep(1,8), c("Normal","Log-normal", "Exponential", "Gamma", "Pearson III", "Log-Pearson III", "Gumbel", "Weibull"))
plot(log(return_periods), data_sorted$aps, xlab = "Log return period", ylab = "Discharge (cfs)",
main = "Estimated peak discharge vs log return period")
estim <- fit("norm", "pwme")
lines(log(return_periods), estim$xt, col=2, lwd=2)
estim <- fit("lognorm", "pwme")
lines(log(return_periods), estim$xt, col=3, lwd=2)
estim <- fit("expo", "mle")
lines(log(return_periods), estim$xt, col="orange", lwd=2)
estim <- fit("gam", "mle")
lines(log(return_periods), estim$xt, col=5, lwd=2)
estim <- fit("p3", "mle")
lines(log(return_periods), estim$xt, col=6, lwd=2)
estim <- fit("lp3", "mle")
lines(log(return_periods), estim$xt, col=4, lwd=2)
estim <- fit("gum", "mme")
lines(log(return_periods), estim$xt, col=8, lwd=2)
estim <- fit("wei", "pwme")
lines(log(return_periods), estim$xt, col=9, lwd=2)
legend("bottomright", col = c(2,3,"orange",5,6,4,8,9), lty = rep(1,8), c("Normal","Log-normal", "Exponential", "Gamma", "Pearson III", "Log-Pearson III", "Gumbel", "Weibull"))
